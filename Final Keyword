Final - variable , method , class 

//Once we assigned value we cant reassign .The value is final .
class Hello {
  public static void main (String args[]){
    final int marks;
    marks = 100;

    System.out.println("Marks : " + marks );
  }
}

Final Class - To Stop Inherting data from parent class , we cant use extend of this class here after .

final class A {
  int price = 100;
  public void show(){
    System.out.println("In A show ::: ");
  }
}

class B extends A{
   
}
class Hello {
  public static void main (String args[]){
    
   System.out.println("");

  }
}

Final Method - To avoid overriding concept , we use final method .

class Calc {
  public void show(){
    System.out.println("By Ilaks ");
  }

  public void add(int a , int b){
     System.out.println("In A ::: " + (a+b));
  }
}

class Advcalc extends Calc{
   public void show(){
    System.out.println("By Venu ");
  }
}
class Hello {
  public static void main (String args[]){
    
    Advcalc c1 = new Advcalc();
    c1.show();
    c1.add(6,9);
  }
}

O/P :(Here somebody used my add method and have taken the credit by having their name , to avoid this I have made that method as final )
By Venu 
In A ::: 15

//So after changing code looks like below one --- >
class Calc {
  final public void show(){
    System.out.println("By Ilaks ");
  }

  public void add(int a , int b){
     System.out.println("In A ::: " + (a+b));
  }
}

class Advcalc extends Calc{

}
class Hello {
  public static void main (String args[]){
    
    Advcalc c1 = new Advcalc();
    c1.show();
    c1.add(6,9);
  }
}


***************************************************************************************************************************************************
Methods called from constructor should generally be declared final .If a constructor calls a non-final method , a subclass may redefine that method 
with unexpected surprising results .

class Bank{
  final int amount = 1000;

  public Bank(){
     this.show();
  }

  public void show(){
    System.out.println("In Bank Show ");
  }
}

class Sbi extends Bank{
  public void show(){
    System.out.println("In SBI Bank Show ");
  }
}
 
class Hello{
  public static void main(String args[]){
    Bank b1 = new Sbi();
    System.out.println(b1.amount+"$");
  }
}

O/P :
In SBI Bank Show 
1000$

--------------------------------------------------------------------------------------------------------------------------------
final keyword - to make that particular variable constant throughout the entire code .
final class - to stop inheritance 
final method - to avoid method overriding 
O/P :
By Ilaks 
In A ::: 15
